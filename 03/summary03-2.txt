
 ◆ 자료형 이해하기

 1. 자료형의 종류
 자료형(Data Type)이란 컴퓨타가 처리하는 자료의 형태를 말합니다. 자바스크립트의 자료형은 값이 하나인 '기본형'
 과 여러 값을 함께 담고 있는 '복합형'으로 구별합니다. 다음 표를 보세요.

  -------------------------------------------------------------------------
  |    자료형              |                    설명                        |
  -------------------------------------------------------------------------
  |      | number(숫자)    | 따옴표 없이 표기한 숫자를 나타냅니다.             |
  |      | string(문자열)   | 작은따옴표('') 나 큰 따옴표("")로 감싼 값입니다.  |
  | 기본형| boolean(논리형)  | 참 또는 거짓의 두 가지 중 하나를 가지고 있습니다. |
  |      | undefined       | 자료형을 지정하지 않았을 떄의 유형입니다.         |
  |      |  null           | 값이 유효하지 않을 때의 유형입니다.              |
  --------------------------------------------------------------------------
  | 복합형| array(배열)     | 하나의 변수에 여러 값을 저장하는 유형입니다.       |
  |      | object(객체)    | 함수와 속성이 함께 포함된 유형입니다.             |
  --------------------------------------------------------------------------

 2. 자료형을 확인하는 방법 - typeof 연산자
 자바스크립트는 변수에 저장하는 값에 따라 자료형이 결정됩니다. 예를 들어 value 변수에 10을 저장하면
 value 의 자료형은 number(숫자)가 되고, "10" 을 저장하면 string(문자열)이 되는 것입니다.
 그러면 어떤 변수가 어떤 자료형인지 알고 싶을 때는 어떻게 할까요? 바로 typeof 연산자를 사용하면 됩니다.


  ⑴ 숫자형 - 정수
  자바스크립트에서 숫자는 정수와 실수로 나누어 집니다. 우선 정수는 소숫점이 없는 숫자를 가리킵니다.
  정수는 표현 방법에 따라 10진수, 8진수, 16진수의 세 가지 유형으로 나누기도 하는데, 각 형태에 대해
  잘 알고 있는 것이 좋습니다.

   - 8진수
   0 ~ 7로 표현하는 수입니다. 이때 10진수와 구별하기 위해서 숫자 0을 맨 앞에 붙입니다.
   ex) 012, 013, 010000(10진수로 10, 11, 512)

   - 16진수
   숫자 0 ~ 9와 알파벳 A ~ F로 표현하는 수입니다. 10진수와 구별하기 위해서 0x(또는 0X)를 맨 앞에 붙입니다.
   ex) 0xfff, 0xFFF, 0XFFF

  ⑵ 숫자형 - 실수
  실수는 소수점이 있는 숫자를 가리킵니다. typeof 연산자로 확인하면 마찬가지로 number 로 나옵니다.
  즉 자바스크립트는 정수와 실수 모두 number 로 취급합니다.
  그런데 자바스크립트에서 계산할 때 주의할 점이 하나 있습니다. 만약 0.1 + 0.2 를 수행하면 그 결과값은
  0.3 이 아니라 0.300000000000004 라는 것입니다. 자바스크립트는 0.1 과 0.2 를 2진수로 변환하여 계산하는데
  이때 자릿수가 많은 소수로 변환되기 때문에 생긴 결과입니다. 따라서 정밀하게 숫자를 계산하는 프로그램을 만들때
  에는 항상 주의해야 합니다.

  ⑶ 문자형
  문자형은 작은따옴표'' 나 큰따옴표 "" 로 감싼 값을 말합니다. 즉 숫자도 따옴표로 감싸게 되면 문자형으로 인식합니다.
  만약 큰따옴표로 묶은 문자형 안에 큰따옴표로 다시 묶은 문장을 넣으려면 어떻게 할까요?
  이런 경우에는 큰따옴표가 중복되지 않도록 큰따옴표를 작은 따옴표로 바꾸어주면 됩니다.
  ex) document.write("<span class='num'>"

  ⑷ 논리형
  논리형은 참(true) 과 거짓(false)라는 값을 표현하는 자료형입니다. 주로 조건을 확인할 때 많이 사용합니다.

  ⑸ undefined 와 null
  undefined 는 자료형이 정의되지 않았을 때의 상황입니다. 자바스크립트에서는 변수를 선언할 때 미리 자료형을 지정하지 않고
  값을 할당할 때 그 값에 따라 결정합니다. 즉 변수가 undefined 라는 것은 '처음부터 변수에 값이 할당되지 않았다' 뜻이지
  undefined 라는 별도의 자료형을 의미하는 것이 아닙니다. 그렇다면 null 은 무엇일까요? null 은 처음 할당된 값이
  유효하지 않다라는 뜻입니다.

  컴퓨터는 값이 처음부터 없었던 경우와 더 이상 유효하지 않게 된 경우를 구별합니다. 그래서 보통 변수를 초기화 할 때
  null 을 많이 사용합니다.

  ⑹ 배열
  자바스크립트에는 하나의 변수에 여러 값을 저장할 수 있는 배열 유형이 있습니다.

   var spring = "봄";
   var summer = "여름";
   var fall = "가을";
   var winter = "겨울";

  이와 같은 코드를 배열로 사용하면 어떻게 될까요?

   var season = ["봄", "여름", "가을", "겨울"];

  배열에 저장할 자료를 쉼표로 구분해서 대괄호[] 로 묶으면 배열을 선언할 수 있습니다.

   var addValue = [];

   - 배열 값을 가져오는 인덱스(index)
   이렇게 저장된 배열에서 값을 가져오려면 어떻게 할까요?
   배열 이름만 입력하면 배열의 전체 내용을 가져오고 배열 이름과 []안에 0,1,2 같은 인덱스 번호를
   같이 넣어주면 해당 인덱스의 값만 가져오게 됩니다. 인덱스는 0부터 시작합니다.

  ⑺ 객체
  객체(Object)는 사용 방법이 조금 독특합니다.

   var kim = {
    firstName: "John",
    lastName: "Kim",
    age: 35,
    address: "Seoul"
   }

  객체는 여러 자료를 중괄호{}로 묶을 수 잇습니다. 여러 자료를 묶는다는 점은 배열과 비슷하지만 저장하는 값의
  모양이 조금 다릅니다. 키(key)와 값(value)를 콜론(:)을 사용해 한 쌍으로 짝지어야 합니다.
  지금은 간단하게 이해하고 뒤에서 자세하게 배우도록 합니다.


 3. 자바스크립트의 자료형의 특징
 자바스크립트의 변수를 이해하기 위해서는 자바스크립트만이 가진 특징을 잘 이해해야 합니다.

  var age = 20;
  var name = "john";

  자바스크립트는 변수를 선언하는 방법이 아주 단순합니다. 그렇다면 다른 언어에서는 어떻게 변수를 선언하나요?
  만약 C 언어라면 이렇게 합니다.

   int age = 20;  //강력한 자료형 체크
   char *name = "John";

  위에서 보는 바와 같이 C 언어에서 변수를 선언할 때는 변수의 자료형을 미리 지정해야 합니다. 그리고 지정된 유형에
  맞는 값만을 변수에 저장할 수 있습니다. 조금 불편해보일 수 있지만 이렇게 자료형을 프로그래머가 제한하면
  값이 이상하게 들어가서 발생하는 프로그램의 오류를 미리 방지할 수 있습니다. C 언어뿐만 아니라 Java 도 이런 방식을
  이용해 변수를 선언합니다. 이러한 방식을 '강력한 자료형 체크(Strong Data Type check)' 라고 합니다.

  그러나 자바스크립트는 미리 변수의 자료형을 지정하지 않습니다. 변수를 선언하고 바로 값을 할당하면 됩니다.
  이렇게 별다른 타입 지정 없이 할당된 값에 따라 자료형이 정해지는 방식을 '느슨한 자료형 체크(weak Data Type check)'라고 합니다.
  그래서 자바스크립트로 프로그램을 만들 때에는 변수에 자신이 의도한 값이 제대로 들어갔는지 꼭 확인해야 합니다.

  var age = 20; //느슨한 자료형 체크

  ※ 자바스크립트와 비슷한 타입스크립트
  자바스크립트는 태생이 웹 문서에 동적인 효과를 추가하기 위해 등장한 '가벼운' 언어였습니다. 그래서 자료형을 특별히
  고려하여 만들지 않았습니다. 하지만 시간이 지남에 따라 자바스크립트는 점점 발전하여 큰 규모의 웹 사이트나 강력한
  애플리케이션을 만들 수 있는 언어가 되었습니다. 그래서 다른 프로그래밍 언어처럼 자료형을 강하게(Strong) 확인해야 한다는
  주장이 나오기 시작했습니다. 그래서 등장한 언어가 타입스크립트(TypeScript)입니다. 타입스크립트는 이름에서 알 수 있듯이
  자바스크립트에 '강한 유형(Strong Typing)'을 추가한 것이 이 언어의 특징입니다.

