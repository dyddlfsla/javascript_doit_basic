
 ◆ Array 객체의 함수 알아보기

 Array 객체에는 배열을 다룰 수 있는 여러 함수가 내장되어 있는데, 이 중에서 자주 사용하는 함수의 기본 사용법부터 알아봅시다.

 배열과 관련된 함수를 사용할 때는 함수의 반환 값이 무엇인지, 기존 배열은 그대로 유지되는지, 아니면 추가하거나 삭제한 요소 때문에
 기존 배열이 바뀌는지를 이해를 하고 있어야 합니다.

 1) 둘 이상의 배열을 연결하는 concat() 함수
 concat() 함수는 기존의 배열에 또 다른 배열이나 값을 합쳐서 새로운 배열을 만드는 함수입니다. 예를 들어 다음과 같이
 nums 배열과 chars 배열이 있을 때, 다음과 같이 concat() 함수를 사용해 두 개의 배열을 연결해서 새로운 배열을 만들 수 있습니다.

 nums = ["1", "2", "3"];
 chars = ["a", "b", "c"];
 nums.concat(chars);
 ['1', '2', '3', 'a', 'b', 'c']

 concat() 함수를 사용할 때 nums 배열과 chars 배열 순서를 바꾸면 연결 순서가 달라집니다.

 chars.concat(nums);
 ['a', 'b', 'c', '1', '2', '3']

 그렇다면, 새로운 배열을 만드는데 사용되었던 nums 배열과 chars 배열은 어떻게 되었을까요? concat() 함수는 기존의 배열을 바탕으로
 '새로운 배열'을 만들어내므로 기존의 nums 나 chars 배열에 영향을 주지 않습니다.

 2) 배열 요소를 연결하는 join() 함수
 join() 함수는 배열 요소를 연결하는 함수입니다. 배열 요소를 연결해서 나열할 때 각 요소 사이에 넣을 구분 기호가 필요한데,
 join() 함수는 이 기호를 직접 지정할 수 있습니다. 만약 이 기호를 따로 지정하지 않는다면 기본값은 쉼표(,)가 됩니다.

 nums.join();
 '1,2,3'

 nums.join("-");
 '1-2-3'

 3) 새로운 요소를 추가하는 push() 함수와 unshift() 함수
 함수를 사용하면 기존 배열에 새로운 요소를 추가할 수도 있습니다. 이 때 배열의 맨 끝에 요소를 추가하려면 push() 함수를 사용하고
 배열의 맨 앞에 추가하려면 unshift() 함수를 사용합니다. 추가하는 요소는 하나일 수도 있고 두 개일수도 있습니다.
 이 경우, 함수를 실행한 후 반환 값은 숫자 5가 표시됩니다.

 앞에서 다룬 concat() 이나 join() 함수와 달리 push() 함수는 새로운 배열을 만드는 것이 아니라 기존의 배열을 수정하는 것입니다.

 var nums = ["1", "2", "3"];
 nums.push("4", "5"); //배열에 4, 5 항목을 추가
 5  // push() 함수의 리턴값으로 배열의 총 길이 반환

 이번에는 unshift() 함수를 이용해 배열에 요소를 추가해봅시다.
 nums.unshift("0");
 6 // unshift() 함수의 리턴값으로 배열의 총 길이 반환
 ['0', '1', '2', '3', '4', '5']

 push() 함수와 다르게 unshift() 함수는 배열의 맨 앞에 요소를 추가하게 됩니다.

 4) 배열에서 요소를 추출하는 pop() 함수와 shift () 함수
 배열에 새로운 요소를 추가하는 함수가 있다면 반대로 배열의 요소를 삭제하는 함수도 있겠지요.
 Array 객체에서 맨 뒤에 있는 요소를 추출할 때는 pop() 함수를, 맨 앞에 있는 요소를 추출할 때는 shift() 함수를 사용합니다.
 배열에서 요소를 추출하면 해당 요소가 배열에서 빠지면서 배열이 수정되기 때문에 배열에서 요소를 삭제할 때는 추출 함수를 사용합니다.

 var study = ["html", "css", "javascript"];
 study.pop();
 [ "html", "css" ]

 pop() 함수는 study 배열에서 마지막에 있는 요소 "javascript" 를 추출합니다. 그렇게 되면 study 배열에는 html 과 css 요소만 남아있게 됩니다.
 pop() 함수의 반환값은 pop() 함수로 인해 추출된 요소입니다.



 



