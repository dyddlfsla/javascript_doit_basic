
 ◆ 객체(Object)란?
 객체를 흔히 '복합' 자료형이라고 부르는 이유는 객체 안에 숫자, 문자열 등 여러가지 자료형들을 같이 담을 수 있기 때문입니다.
 하지만 객체 역시 그 자체로 하나의 자료형이기 때문에 자바스크립트에서 객체는 자료를 저장하고 처리하는 기본 단위입니다.

 객체의 형태를 보여주는 예시 중 하나로 온라인 서점에서 판매하는 책을 살펴보겠습니다. 서점의 책들은 '제목'만으로 책을 소개하지
 않습니다. 제목을 포함해서 이 책의 분야, 저자, 쪽수, 가격, 출간일 등 여러 정보를 함께 담아 소개합니다. 이렇게 여러 정보가
 모여서 책이라는 상품을 설명하고 있습니다.

 제목: 하면 된다!,
 저자: 김철수,
 쪽수: 358쪽,
 가격: 16,000원,

 이렇게 하나의 변수에 다양한 정보를 담기 위해 사용하는 자료형이 바로 객체입니다.
 다음과 같이 book 이라는 객체를 만들어 위에 나온 정보들을 다룰 수 있습니다.

 var book = {
  title: "하면된다!",
  author: "홍길동",
  pages: 358,
  price:16000
 }

 객체를 왜 사용하는지에 대해 한번 생각해 봅시다. 회원제 사이트에서 회원 정보를 어떻게 저장할까요?
 회원으로 가입하면 회원 이름과 아이디, 비밀번호, 가입 날짜, 생년월일 등 여러 정보가 하나의 회원 정보에 저장될 것입니다.
 회원 정보를 살펴보거나 수정하기 위해서는 '회원'이란 변수 하나에 여러 정보를 저장하는 것이 편하므로 변수 '회원'을 객체
 형태로 만듭니다. 이렇게 자바스크립트를 사용해 웹 사이트나 애플리케이션의 자료를 다루려면 하나의 변수에 여러 정보를
 저장할 수 있는 객체가 꼭 필요합니다.

 1. 자바스크립트 객체의 종류

 ⑴ 내장 객체
 자바스크립트 프로그래밍을 할 때 자주 사용되는 요소는 자바스크립트 안에 미리 객체로 정의되어 있습니다. 이러한 객체를
 '내장 객체(Built-in Object)'라고 합니다. 예를 들어 날짜나 시간과 관련된 정보가 필요할 때에는 Date 객체를 사용해
 현재 시각을 손쉽게 알아낼 수 있습니다. 자바스크립트에는 Number, Boolean, Array, Math 등 많은 내장 객체가 들어 있습니다.

 ⑵ 문서 객체 모델 (DOM)
 객체를 사용하여 웹 문서를 관리하는 방식을 '문서 객체 모델(Document Object Model)'이라고 합니다. 문서 객체 모델에는
 웹 문서 뿐만 아니라 웹 문서 안에 포함된 이미지, 링크, 텍스트 필드 등도 모두 각각 별도의 객체로 미리 만들어 놓았습니다.
 여기에는 웹 문서 자체를 담는 Document 객체, 웹 문서 안의 이미지를 관리하는 Image 객체 등이 있습니다.

 ⑶ 브라우저 객체 모델 (BOM)
 웹 문서를 관리하는 것이 문서 객체 모델이라면, 웹 브라우저의 주소 표시줄이나 창 크기 등 웹 브라우저 정보를 객체로 다루는
 것이 '브라우저 객체 모델(Browser Object Model)'입니다. 브라우저 객체 모델에는 사용중인 브라우저 종류나 버전을 담고 있는
 Navigator 객체, 브라우저에서 방문한 기록을 남기는 History 객체, 주소 표시줄 정보를 담고 있는 Location 객체, 화면 크기
 정보를 담고 있는 Screen 객체 등이 있습니다.

 ⑷ 사용자 정의 객체
 앞에서 살펴본 내장 객체 뿐만 아니라 사용자가 필요할 때마다 자신의 객체를 직접 정의해서 사용할 수도 있습니다. 위에서 만들었던
 Book 객체도 사용자 정의 객체에 속하는 것입니다.

 2. 객체의 속성과 메서드
 객체에서 값을 담고 있는 정보를 속성(Property)라고 부릅니다. 속성은 자바스크립트 내장 객체에도 만들어져 있습니다. 객체의 속성
 값을 가져올 때에는 객체 이름 뒤에 마침표(.)을 찍고 속성 이름을 적습니다.
 예를 들어 자바스크립트에는 열려 있는 웹 브라우저 창의 정보를 담고 있는 Navigator 객체가 있습니다. 이 객체 안에 어떤 속성이
 있는지 알아볼까요? 콘솔창을 열고 콘솔창에 navigator.vendor 를 입력해보세요. vendor 속성에 저장된 제조업체 정보가 표시됩니다.
 객체에는 속성 말고도 한 가지 더 중요한 것이 있는데, 그것이 바로 '메서드(Method)'입니다. 메서드는 객체가 어떻게 동작할지 선언해
 놓은 함수를 말합니다. 예를 들어, Window 객체 안에는 웹 브라우저 창과 관련된 여러 메서드들이 미리 만들어져 있습니다.
 콘솔창을 열고 window 을 입력합니다. alert 항목을 보면 f 가 표시되어 있습니다. 이것은 function 을 뜻하는 것으로 함수를 의미합니다.
 즉 Window 객체에 alert() 함수가 미리 만들어져 있다는 뜻입니다. 이렇게 객체 안에 만들어져 있는 함수를 '메서드'라고 합니다.
 이 책에서 지금까지 사용한 alert() 메서드는 사실 Window 객체가 가진 alert() 함수였던 것입니다. 속성을 사용할 때와 마찬가지로
 객체의 메서드를 사용할때도 마침표(.)를 사용해서 메서드를 호출합니다.

 ※ Window 객체의 함수는 마침표(.) 없이 이름만 사용해서 실행할 수 있습니다.
 Window 객체는 모든 객체를 품고 있는 최상위 객체이기 때문에 Window 객체의 함수를 실행할 때에는 마침표 없이 사용할 수 있습니다.

  window.alert() → alert() //가능

  3. 객체의 프로토타입과 인스턴스 소개
  객체를 만들기 위한 기본 틀을 '프로토타입(ProtoType)'이라고 합니다. 또한 이 프로토타입을 이용해 만들어낸 객체를 '인스턴스(instance)'라고 합니다.

  4. 객체의 인스턴스 만들기
  객체의 인스턴스를 만들 때, 즉 새 객체를 만들 때에는 new 예약어를 사용합니다. 예를 들어,
  자바스크립트에서 날짜나 시간 정보는 Date 객체에 저장하고 관리합니다. 그래서 날짜 정보를 사용하기 위해서는
  가장 먼저 Date 객체의 인스턴스를 만들고 그 인스턴스를 변수에 저장한 뒤 프로그램에서 사용합니다.

  m부터 n사이에서 무작위 정수 생성하기

  Math.random()
  Math.random() * n
  (Math.random() * n) + m
  Math.floor(Math.random() * n) + m )

  [고쌤의 한마디]
  1. window 객체의 함수는 객체 이름없이 함수만 호출해서 사용할 수 있어요
  Window 객체는 모든 객체를 품고 있는 최상위 객체이기 때문에 Window 객체의 함수를 실행할 때는 window 와 마침표(.)를 빼고
  alert("내용")처럼 함수 이름만 사용해서 실행해도 됩니다.

  2. Math 객체는 따로 인스턴스를 생성하지 않습니다.
  일반적으로 자바스크립트에서 객체의 속성이나 함수를 사용하려면 예약어 new 를 통해 객체의 인스턴스를 만든 후 사용해야했죠?
  하지만 Math 객체는 따로 객체의 인스턴스를 사용하지 않고 속성이나 함수를 사용합니다. 그래서 Math.random()처럼 대문자로
  시작하는 객체 이름 뒤에 바로 속성이나 함수를 사용하면 됩니다.





