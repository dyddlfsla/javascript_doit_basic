
◆ 06-2. 사용자 정의 객체 만들기
 자바스크립트에는 자주 사용하는 여러 객체가 이미 만들어져 있지만, 필요하다면 사용자가 직접 객체를 만들어 사용할 수도 있습니다.
 만일 자동차 관리 프로그램을 작성한다면 자동차 정보를 저장하는 객체가 필요하겠죠? 하지만 이런 객체는 미리 만들어져 있지 않으며
 따라서 사용자가 직접 만들어야 하는 객체입니다. 이렇게 사용자가 직접 만든 객체를 '사용자 정의 객체'라고 합니다.
 자바스크립트에는 객체를 만드는 몇 가지 방법이 있는데, 가장 많이 사용되는 방법은 객체 리터럴과 생성자 함수 방식입니다.

 1) 리터럴 표기법을 사용하는 객체 생성
 리터럴이란 자료를 표기하는 방식을 말합니다. 자바스크립트 뿐만 아니라 프로그래밍 언어 전반에서 사용하는 용어입니다. 리터럴을
 사용해서 표기한다는 건 변수를 선언하면서 동시에 값을 초기화하는 것을 말합니다. 예를 들어,

 var a = 10; 과 같이 하는 것을 리터럴 표기법이라고 합니다.

 그렇다면 '객체 리터럴'이란 객체를 선언하면서 동시에 속성과 함수를 지정해주는 것이라고 추측할 수 있습니다.
 객체 리터럴을 사용해서 객체를 정의할 때는 중괄호{} 안에 '속성 이름:값'을 하나의 쌍으로 지정합니다. 속성과 함수가 여러 개 일 경우
 쌍마다 쉼표(,)를 추가하여 구분하도록 합니다. 함수 또한 '함수이름: function() {...}' 와 같이 지정합니다.

 var book = {
  title:"자바스크립트",
  author:"고쌤",
  pages: 500,
  price: 15000,
  info: function() {
    alert(this.title + "책의 분량은" + this.pages + "쪽입니다.");
  }
 }

 사용자 정의 객체에서도 속성 값을 가져오려면 마침표(.)를 사용합니다. 예를 들어 book 객체의 title 속성값을 알고 싶다면
 book.title 과 같이 하면 됩니다.

 book 객체를 만들어 사용하다가 새로운 속성을 추가할 수도 있습니다. 다음과 같이 하면 됩니다.
 book.field = "IT"



 2) 생성자 함수를 사용해 객체를 만드는 방법
 리터럴 표기법을 사용해 객체를 만드는 방법은 정해진 값을 가진 객체를 한 번만 만들어 냅니다. 만약 이 방법으로
 도서 관리 프로그램을 만든다면 매번 객체와 똑같은 속성과 함수를 입력하고 책마다 그 값을 다르게 해서 객체를 만들어야 합니다.
 이럴 때 항상 필요한 속성과 함수는 틀처럼 미리 만들어 놓고 필요할 때마다 그 틀을 복제한 인스턴스를 만들어 책 정보를 담는 것이
 편리합니다. 이때 생성자 함수를 사용해 객체를 만듭니다.

 생성자 함수란 객체를 만들어 내는 함수를 말합니다. 이 또한 함수이므로 function 예약어를 사용해 선언합니다.
 생성자 함수 안에 객체의 속성과 함수를 정의할 때는 this 예약어 다음에 마침표와 속성 이름을 입력합니다. 여기에서 this 가 가리키는 것은
 선언하고 있는 객체 자기 자신입니다.

 function Book(author, pages, price, title) {
  this.author = author;
  this.pages = pages;
  this.price = price;
  this.title = title;

 }

 이렇게 생성자 함수를 만들었다면 다음과 같이 인스턴스를 만들 수 있습니다.

 jsBook = new Book("홍길동", 500, 15000, "자바스크립트"); // 인스턴스 만들기
 jsBook.title

